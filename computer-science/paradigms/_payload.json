[{"data":1,"prerenderedAt":323},["Reactive",2],{"js":3,"content-query-ZKKmWb7MAv":191,"content-query-lxPJherd2B":260},[4,110],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":8,"body":10,"_type":105,"_id":106,"_source":107,"_file":108,"_extension":109},"/computer-science/paradigms/functional/intro","functional",false,"","Intro",{"type":11,"children":12,"toc":100},"root",[13,22,36,41,66,71,76,81],{"type":14,"tag":15,"props":16,"children":18},"element","h3",{"id":17},"why",[19],{"type":20,"value":21},"text","Why?",{"type":14,"tag":23,"props":24,"children":25},"p",{},[26,28,34],{"type":20,"value":27},"Functional programming is an approach to software development based around the ",{"type":14,"tag":29,"props":30,"children":31},"strong",{},[32],{"type":20,"value":33},"evaluation of functions",{"type":20,"value":35},". Like mathematics, functions in programming map input to output to produce a result. You can combine basic functions in many ways to build more and more complex programs.",{"type":14,"tag":23,"props":37,"children":38},{},[39],{"type":20,"value":40},"Functional programming follows a few core principles:",{"type":14,"tag":42,"props":43,"children":44},"ul",{},[45,51,56,61],{"type":14,"tag":46,"props":47,"children":48},"li",{},[49],{"type":20,"value":50},"Functions are independent from the state of the program or global variables. They only depend on the arguments passed into them to make a calculation",{"type":14,"tag":46,"props":52,"children":53},{},[54],{"type":20,"value":55},"Functions try to limit any changes to the state of the program and avoid changes to the global objects holding data",{"type":14,"tag":46,"props":57,"children":58},{},[59],{"type":20,"value":60},"Functions have minimal side effects in the program",{"type":14,"tag":46,"props":62,"children":63},{},[64],{"type":20,"value":65},"The functional programming software development approach breaks a program into small, testable parts.",{"type":14,"tag":23,"props":67,"children":68},{},[69],{"type":20,"value":70},"Functional programming is a style of programming where solutions are simple, isolated functions, without any side effects outside of the function scope.",{"type":14,"tag":23,"props":72,"children":73},{},[74],{"type":20,"value":75},"INPUT -> PROCESS -> OUTPUT",{"type":14,"tag":23,"props":77,"children":78},{},[79],{"type":20,"value":80},"Functional programming is about:",{"type":14,"tag":82,"props":83,"children":84},"ol",{},[85,90,95],{"type":14,"tag":46,"props":86,"children":87},{},[88],{"type":20,"value":89},"Isolated functions - there is no dependence on the state of the program, which includes global variables that are subject to change",{"type":14,"tag":46,"props":91,"children":92},{},[93],{"type":20,"value":94},"Pure functions - the same input always gives the same output",{"type":14,"tag":46,"props":96,"children":97},{},[98],{"type":20,"value":99},"Functions with limited side effects - any changes, or mutations, to the state of the program outside the function are carefully controlled",{"title":8,"searchDepth":101,"depth":101,"links":102},2,[103],{"id":17,"depth":104,"text":21},3,"markdown","content:computer-science:paradigms:functional:intro.md","content","computer-science/paradigms/functional/intro.md","md",{"_path":111,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":112,"description":8,"body":113,"_type":105,"_id":189,"_source":107,"_file":190,"_extension":109},"/computer-science/paradigms/functional/vs-imperative","Vs Imperative",{"type":11,"children":114,"toc":186},[115,121,165],{"type":14,"tag":15,"props":116,"children":118},{"id":117},"how-is-it-different-from-imperative",[119],{"type":20,"value":120},"how is it different from imperative?",{"type":14,"tag":42,"props":122,"children":123},{},[124,129,147],{"type":14,"tag":46,"props":125,"children":126},{},[127],{"type":20,"value":128},"in english, imperative tense means giving commands",{"type":14,"tag":46,"props":130,"children":131},{},[132,134],{"type":20,"value":133},"imperative programming means, giving computer set of statements to perfom task\n",{"type":14,"tag":42,"props":135,"children":136},{},[137,142],{"type":14,"tag":46,"props":138,"children":139},{},[140],{"type":20,"value":141},"often statements change state of prog, like updating global var",{"type":14,"tag":46,"props":143,"children":144},{},[145],{"type":20,"value":146},"ex> for loop, that gives exact direction to iterate over indices of array",{"type":14,"tag":46,"props":148,"children":149},{},[150,152],{"type":20,"value":151},"functional programming is declarative form of programming\n",{"type":14,"tag":42,"props":153,"children":154},{},[155,160],{"type":14,"tag":46,"props":156,"children":157},{},[158],{"type":20,"value":159},"you tell computer what you want done by calling a method",{"type":14,"tag":46,"props":161,"children":162},{},[163],{"type":20,"value":164},"ex> map() method that can iterate over array w/o worrying about indexes",{"type":14,"tag":166,"props":167,"children":168},"blockquote",{},[169],{"type":14,"tag":23,"props":170,"children":171},{},[172,174,179,181],{"type":20,"value":173},"fp focuses on ",{"type":14,"tag":29,"props":175,"children":176},{},[177],{"type":20,"value":178},"what",{"type":20,"value":180},". imperative focuses on ",{"type":14,"tag":29,"props":182,"children":183},{},[184],{"type":20,"value":185},"how",{"title":8,"searchDepth":101,"depth":101,"links":187},[188],{"id":117,"depth":104,"text":120},"content:computer-science:paradigms:functional:vs-imperative.md","computer-science/paradigms/functional/vs-imperative.md",{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":8,"body":192,"_type":105,"_id":106,"_source":107,"_file":108,"_extension":109},{"type":11,"children":193,"toc":257},[194,198,207,211,230,234,238,242],{"type":14,"tag":15,"props":195,"children":196},{"id":17},[197],{"type":20,"value":21},{"type":14,"tag":23,"props":199,"children":200},{},[201,202,206],{"type":20,"value":27},{"type":14,"tag":29,"props":203,"children":204},{},[205],{"type":20,"value":33},{"type":20,"value":35},{"type":14,"tag":23,"props":208,"children":209},{},[210],{"type":20,"value":40},{"type":14,"tag":42,"props":212,"children":213},{},[214,218,222,226],{"type":14,"tag":46,"props":215,"children":216},{},[217],{"type":20,"value":50},{"type":14,"tag":46,"props":219,"children":220},{},[221],{"type":20,"value":55},{"type":14,"tag":46,"props":223,"children":224},{},[225],{"type":20,"value":60},{"type":14,"tag":46,"props":227,"children":228},{},[229],{"type":20,"value":65},{"type":14,"tag":23,"props":231,"children":232},{},[233],{"type":20,"value":70},{"type":14,"tag":23,"props":235,"children":236},{},[237],{"type":20,"value":75},{"type":14,"tag":23,"props":239,"children":240},{},[241],{"type":20,"value":80},{"type":14,"tag":82,"props":243,"children":244},{},[245,249,253],{"type":14,"tag":46,"props":246,"children":247},{},[248],{"type":20,"value":89},{"type":14,"tag":46,"props":250,"children":251},{},[252],{"type":20,"value":94},{"type":14,"tag":46,"props":254,"children":255},{},[256],{"type":20,"value":99},{"title":8,"searchDepth":101,"depth":101,"links":258},[259],{"id":17,"depth":104,"text":21},{"_path":111,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":112,"description":8,"body":261,"_type":105,"_id":189,"_source":107,"_file":190,"_extension":109},{"type":11,"children":262,"toc":320},[263,267,304],{"type":14,"tag":15,"props":264,"children":265},{"id":117},[266],{"type":20,"value":120},{"type":14,"tag":42,"props":268,"children":269},{},[270,274,289],{"type":14,"tag":46,"props":271,"children":272},{},[273],{"type":20,"value":128},{"type":14,"tag":46,"props":275,"children":276},{},[277,278],{"type":20,"value":133},{"type":14,"tag":42,"props":279,"children":280},{},[281,285],{"type":14,"tag":46,"props":282,"children":283},{},[284],{"type":20,"value":141},{"type":14,"tag":46,"props":286,"children":287},{},[288],{"type":20,"value":146},{"type":14,"tag":46,"props":290,"children":291},{},[292,293],{"type":20,"value":151},{"type":14,"tag":42,"props":294,"children":295},{},[296,300],{"type":14,"tag":46,"props":297,"children":298},{},[299],{"type":20,"value":159},{"type":14,"tag":46,"props":301,"children":302},{},[303],{"type":20,"value":164},{"type":14,"tag":166,"props":305,"children":306},{},[307],{"type":14,"tag":23,"props":308,"children":309},{},[310,311,315,316],{"type":20,"value":173},{"type":14,"tag":29,"props":312,"children":313},{},[314],{"type":20,"value":178},{"type":20,"value":180},{"type":14,"tag":29,"props":317,"children":318},{},[319],{"type":20,"value":185},{"title":8,"searchDepth":101,"depth":101,"links":321},[322],{"id":117,"depth":104,"text":120},1713292136874]