{"_path":"/programming-languages/js/inheritance","_dir":"js","_draft":false,"_partial":false,"_locale":"","title":"Inheritance","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"inhertiance"},"children":[{"type":"text","value":"inhertiance"}]},{"type":"element","tag":"h4","props":{"id":"using-functions"},"children":[{"type":"text","value":"using functions"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"    // let animal = new Animal() // has some disadvantage, therefore not used\n    // 1. Create Instance of parent\n    let Animal = function(){}\n    Animal.prototype.eat = function(){\n        return 'nom nom'\n    }\n\n    // 2. Set prototype of child to be instance of parent & update constructor\n    let Bird = function(){}\n    Bird.prototype = Object.create(Animal.prototype)\n    Bird.prototype.constructor = Bird\n\n    // 3. add own methods\n    Bird.prototype.fly = function(){\n        return 'i can fly'\n    }\n\n    // 4. Override parent method\n    Bird.prototype.eat = function(){\n        return 'eating nicely'\n    }\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // let animal = new Animal() // has some disadvantage, therefore not used\n    // 1. Create Instance of parent\n    let Animal = function(){}\n    Animal.prototype.eat = function(){\n        return 'nom nom'\n    }\n\n    // 2. Set prototype of child to be instance of parent & update constructor\n    let Bird = function(){}\n    Bird.prototype = Object.create(Animal.prototype)\n    Bird.prototype.constructor = Bird\n\n    // 3. add own methods\n    Bird.prototype.fly = function(){\n        return 'i can fly'\n    }\n\n    // 4. Override parent method\n    Bird.prototype.eat = function(){\n        return 'eating nicely'\n    }\n"}]}]},{"type":"element","tag":"h3","props":{"id":"above-example-using-classes"},"children":[{"type":"text","value":"above example using classes"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"class Animal{\n    eat(){\n        return 'nom nom'\n    }\n}\nclass Bird extends Animal{\n    fly(){\n        return 'I can fly!'\n    }\n    // override\n    eat(){\n        return 'burp burp'\n    }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Animal{\n    eat(){\n        return 'nom nom'\n    }\n}\nclass Bird extends Animal{\n    fly(){\n        return 'I can fly!'\n    }\n    // override\n    eat(){\n        return 'burp burp'\n    }\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"mixin"},"children":[{"type":"text","value":"Mixin"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"added to object not constructor, therefore "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"protoype"}]},{"type":"text","value":" is not used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"add unrelated function to both obj"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"let flyMixin = function(obj){\n    obj.fly = function(){\n        console.log('i am flying')\n    }\n}\nflyMixin(bird)\nflyMixin(airplane)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"let flyMixin = function(obj){\n    obj.fly = function(){\n        console.log('i am flying')\n    }\n}\nflyMixin(bird)\nflyMixin(airplane)\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"inhertiance","depth":3,"text":"inhertiance"},{"id":"above-example-using-classes","depth":3,"text":"above example using classes"},{"id":"mixin","depth":3,"text":"Mixin"}]}},"_type":"markdown","_id":"content:programming-languages:js:inheritance.md","_source":"content","_file":"programming-languages/js/inheritance.md","_extension":"md"}