{"_path":"/ui-libraries/react/useeffect","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"UseEffect","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"useeffect"},"children":[{"type":"text","value":"useEffect"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"synchronize state of the world with state of my app"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"useEffect(callback, dependencyArray)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"useEffect(callback, dependencyArray)\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"custom hook: a function that uses hooks"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to give hint to eslint system, custom hook should start with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"use"}]},{"type":"text","value":", just a convention to tell ecosystem that it is custom hook"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"function useLocalState(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return localStorage.getItem(key) || defaultValue\n  })\n  useEffect(() => {\n    localStorage.setItem(key, state)\n  }, [key, state])\n  return [state, setState]\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function useLocalState(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return localStorage.getItem(key) || defaultValue\n  })\n  useEffect(() => {\n    localStorage.setItem(key, state)\n  }, [key, state])\n  return [state, setState]\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"as a good practice, always serialize/deserialize data before reading/writing to localStorage"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const [state, setState] = useState(() => {\n  const value = localStorage.getItem(key)\n  if (value) {\n    return JSON.parse(value)\n  }\n  return defaultValue\n})\n\nuseEffect(() => {\n  localStorage.setItem(key, JSON.stringify(state))\n}, [key, state])\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const [state, setState] = useState(() => {\n  const value = localStorage.getItem(key)\n  if (value) {\n    return JSON.parse(value)\n  }\n  return defaultValue\n})\n\nuseEffect(() => {\n  localStorage.setItem(key, JSON.stringify(state))\n}, [key, state])\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"useeffect","depth":3,"text":"useEffect"}]}},"_type":"markdown","_id":"content:ui-libraries:react:useEffect.md","_source":"content","_file":"ui-libraries/react/useEffect.md","_extension":"md"}