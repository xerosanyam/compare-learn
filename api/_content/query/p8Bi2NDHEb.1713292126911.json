{"_path":"/programming-languages/js/regex","_dir":"js","_draft":false,"_partial":false,"_locale":"","title":"Regex","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"regex"},"children":[{"type":"text","value":"regex"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Single Match\n"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const index = 'Some text'.search(regex)\nreturns int-> -1 or i>=0\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const index = 'Some text'.search(regex)\nreturns int-> -1 or i>=0\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"no use of /g"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Multiple match\n"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const matches = 'Some text'.match(regex)\nreturns null or {index:3, input:'Some text'}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const matches = 'Some text'.match(regex)\nreturns null or {index:3, input:'Some text'}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"returns multiple match if /g"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"replace\n"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const next = 'Some text'.replace(regex,'hi mom')\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const next = 'Some text'.replace(regex,'hi mom')\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"regex\n"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const regex = /bob/g -> match bob\nconst regex = /bob|alice/g -> match bob or alice\nconst regex = /(bob|alice) Jones/g -> match bob jones or alice jones\nconst regex = /colou?r/g -> matches color, colour ?-> 0 or 1\nconst regex = /color*/ -> matches color, colorrr *-> 0 or multiple\nconst regex = /color+/ -> matches color, colorrr +-> 1 or multiple\nconst regex = /color{2,3}/ -> matches colorr, colorrr, but not color {min, mix}\n\\ -> escape special character\n\\d -> digit\n\\w -> word character\n\\D -> not digit\n\\W -> not word character\n[A-Z] -> b/w a-z\n[^A-Z]-> not b/w a-z\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const regex = /bob/g -> match bob\nconst regex = /bob|alice/g -> match bob or alice\nconst regex = /(bob|alice) Jones/g -> match bob jones or alice jones\nconst regex = /colou?r/g -> matches color, colour ?-> 0 or 1\nconst regex = /color*/ -> matches color, colorrr *-> 0 or multiple\nconst regex = /color+/ -> matches color, colorrr +-> 1 or multiple\nconst regex = /color{2,3}/ -> matches colorr, colorrr, but not color {min, mix}\n\\ -> escape special character\n\\d -> digit\n\\w -> word character\n\\D -> not digit\n\\W -> not word character\n[A-Z] -> b/w a-z\n[^A-Z]-> not b/w a-z\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2 ways to created\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"literal notion"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"/sanyam/gi\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/sanyam/gi\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"used when it will remain constant"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: in loops"}]}]},{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"constructor function"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"new RegExp('sanyam','gi')\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"new RegExp('sanyam','gi')\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"regex","depth":2,"text":"regex"}]}},"_type":"markdown","_id":"content:programming-languages:js:regex.md","_source":"content","_file":"programming-languages/js/regex.md","_extension":"md"}