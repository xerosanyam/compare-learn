{"_path":"/concurrency/javascript/async-await","_dir":"javascript","_draft":false,"_partial":false,"_locale":"","title":" Async Await","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"async-await"},"children":[{"type":"text","value":"Async-Await"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"introduced in ES7, implicity return promise"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When encountering an await keyword, the async function gets suspended."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The execution of the function body gets paused, and the rest of the async function gets run in a microtask instead of a regular task!"}]}]},{"type":"element","tag":"h4","props":{"id":"difference-bw-await-promise"},"children":[{"type":"text","value":"Difference b/w Await & Promise"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const one = () => Promise.resolve('promise')\nasync function myFunc() {\n  console.log('start of func')\n  const res = await one()\n  console.log(res)\n  console.log('end of func')\n}\nconsole.log('before function')\nmyFunc()\nconsole.log('after function')\n\n//output:\n// before function\n// start of func\n// after function\n// promise\n// end of func\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const one = () => Promise.resolve('promise')\nasync function myFunc() {\n  console.log('start of func')\n  const res = await one()\n  console.log(res)\n  console.log('end of func')\n}\nconsole.log('before function')\nmyFunc()\nconsole.log('after function')\n\n//output:\n// before function\n// start of func\n// after function\n// promise\n// end of func\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const one = () => Promise.resolve('one')\nfunction myFunc() {\n  console.log('start of func')\n  one().then((res) => console.log(res))\n  console.log('end of func')\n}\nconsole.log('before function')\nmyFunc()\nconsole.log('after function')\n\n//output:\n// before function\n// start of func\n// end of func\n// after function\n// promise\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const one = () => Promise.resolve('one')\nfunction myFunc() {\n  console.log('start of func')\n  one().then((res) => console.log(res))\n  console.log('end of func')\n}\nconsole.log('before function')\nmyFunc()\nconsole.log('after function')\n\n//output:\n// before function\n// start of func\n// end of func\n// after function\n// promise\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"async-await","depth":2,"text":"Async-Await"}]}},"_type":"markdown","_id":"content:concurrency:javascript:6. Async-Await.md","_source":"content","_file":"concurrency/javascript/6. Async-Await.md","_extension":"md"}