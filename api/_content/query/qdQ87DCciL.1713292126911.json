{"_path":"/programming-languages/js/hashmap-map-set","_dir":"js","_draft":false,"_partial":false,"_locale":"","title":"Hashmap Map Set","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"map-key-value"},"children":[{"type":"text","value":"Map (key, value)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"set, get"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const hashmap = new Map()\nhashmap.set('sanyam', 30)\nhashmap.get('sanyam') // 30\n\nhashmap.has('sanyam') // true\nhashmap.size // 1\nfor (const [key, value] of hashmap) {\n  console.log('key,value', key, value)\n}\nhashmap.get('anisha') // undefined\nhashmap.delete('sanyam')\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const hashmap = new Map()\nhashmap.set('sanyam', 30)\nhashmap.get('sanyam') // 30\n\nhashmap.has('sanyam') // true\nhashmap.size // 1\nfor (const [key, value] of hashmap) {\n  console.log('key,value', key, value)\n}\nhashmap.get('anisha') // undefined\nhashmap.delete('sanyam')\n"}]}]},{"type":"element","tag":"h3","props":{"id":"set-value"},"children":[{"type":"text","value":"Set (value)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"used when you just want to check existence"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"add"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const set = new Set()\nset.add('sanyam')\n\nset.has('sanyam') // true\nset.size // 1\nset.delete('sanyam')\n\nconst a = [1, 2, 1, 2]\nconst unique = new Set(a) //{1,2}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const set = new Set()\nset.add('sanyam')\n\nset.has('sanyam') // true\nset.size // 1\nset.delete('sanyam')\n\nconst a = [1, 2, 1, 2]\nconst unique = new Set(a) //{1,2}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"map-key-value","depth":3,"text":"Map (key, value)"},{"id":"set-value","depth":3,"text":"Set (value)"}]}},"_type":"markdown","_id":"content:programming-languages:js:hashmap-map-set.md","_source":"content","_file":"programming-languages/js/hashmap-map-set.md","_extension":"md"}