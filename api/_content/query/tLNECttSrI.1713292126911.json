{"_path":"/programming-languages/js/sort-array","_dir":"js","_draft":false,"_partial":false,"_locale":"","title":"Sort Array","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"arrayprototypesort"},"children":[{"type":"text","value":"Array.prototype.sort()"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"does in place & also returns sorted array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sorting is peculiar\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"converts elements to string, then compares them"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sorts in ascending order"}]}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const months = ['March', 'Jan', 'Feb', 'Dec']\nmonths.sort() // [\"Dec\", \"Feb\", \"Jan\", \"March\"]\n\nconst nums = [1, 30, 4, 21, 100000]\nnums.sort() // [1, 100000, 21, 30, 4]\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const months = ['March', 'Jan', 'Feb', 'Dec']\nmonths.sort() // [\"Dec\", \"Feb\", \"Jan\", \"March\"]\n\nconst nums = [1, 30, 4, 21, 100000]\nnums.sort() // [1, 100000, 21, 30, 4]\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We can see, Numbers are not sorted!"}]}]},{"type":"element","tag":"h3","props":{"id":"correct-way-to-sort-num-array"},"children":[{"type":"text","value":"Correct way to sort num array"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"nums.sort((first, second) => first - second)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"nums.sort((first, second) => first - second)\n"}]}]},{"type":"element","tag":"h3","props":{"id":"correct-way-to-sort-date-array"},"children":[{"type":"text","value":"Correct way to sort date array"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"dates.sort((first, second) => new Date(first) - new Date(second))\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"dates.sort((first, second) => new Date(first) - new Date(second))\n"}]}]},{"type":"element","tag":"h3","props":{"id":"correct-way-to-sort-string"},"children":[{"type":"text","value":"correct way to sort string"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"strings.sort((first, second))=>{\n  if(first<second){\n    // natural order is ascending order. here we do not want to change anything so return -1\n    return -1\n  }\n  return 1\n})\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"strings.sort((first, second))=>{\n  if(first<second){\n    // natural order is ascending order. here we do not want to change anything so return -1\n    return -1\n  }\n  return 1\n})\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"functional. requires a callback to sort"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"arrayprototypesort","depth":2,"text":"Array.prototype.sort()","children":[{"id":"correct-way-to-sort-num-array","depth":3,"text":"Correct way to sort num array"},{"id":"correct-way-to-sort-date-array","depth":3,"text":"Correct way to sort date array"},{"id":"correct-way-to-sort-string","depth":3,"text":"correct way to sort string"}]}]}},"_type":"markdown","_id":"content:programming-languages:js:sort-array.md","_source":"content","_file":"programming-languages/js/sort-array.md","_extension":"md"}