[{"_path":"/ui-libraries/react/appendingtodom","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"AppendingToDOM","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"appending-to-dom"},"children":[{"type":"text","value":"Appending to DOM"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"ReactDOM.render(JSX or <component/>, elementToMountOn)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"ReactDOM.render(JSX or <component/>, elementToMountOn)\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"appending-to-dom","depth":2,"text":"Appending to DOM"}]}},"_type":"markdown","_id":"content:ui-libraries:react:AppendingToDOM.md","_source":"content","_file":"ui-libraries/react/AppendingToDOM.md","_extension":"md"},{"_path":"/ui-libraries/react/binding-method","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Binding Method","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"binding-methods"},"children":[{"type":"text","value":"binding methods"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"Hello\"\n    };\n    // Change code below this line\n    this.handleClick = this.handleClick.bind(this)\n    // Change code above this line\n  }\n  handleClick() {\n    this.setState({\n      text: \"You clicked!\"\n    });\n  }\n  render() {\n    return (\n      <div>\n        { /* Change code below this line */ }\n        <button onClick={this.handleClick}>Click Me</button>\n        { /* Change code above this line */ }\n        <h1>{this.state.text}</h1>\n      </div>\n    );\n  }\n};\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"Hello\"\n    };\n    // Change code below this line\n    this.handleClick = this.handleClick.bind(this)\n    // Change code above this line\n  }\n  handleClick() {\n    this.setState({\n      text: \"You clicked!\"\n    });\n  }\n  render() {\n    return (\n      <div>\n        { /* Change code below this line */ }\n        <button onClick={this.handleClick}>Click Me</button>\n        { /* Change code above this line */ }\n        <h1>{this.state.text}</h1>\n      </div>\n    );\n  }\n};\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"binding-methods","depth":3,"text":"binding methods"}]}},"_type":"markdown","_id":"content:ui-libraries:react:binding-method.md","_source":"content","_file":"ui-libraries/react/binding-method.md","_extension":"md"},{"_path":"/ui-libraries/react/child-interact-parent","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Child Interact Parent","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"child-interact-parent"},"children":[{"type":"text","value":"child interact parent"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pass methods to child just like prop"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"callback is passed"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"class MyApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n  render() {\n    return (\n       <div>\n        { /* Change code below this line */ }\n        <GetInput input={this.state.inputValue} handleChange={this.handleChange}/>\n        <RenderInput input={this.state.inputValue}/>\n        { /* Change code above this line */ }\n       </div>\n    );\n  }\n};\n\nclass GetInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <h3>Get Input:</h3>\n        <input\n          value={this.props.input}\n          onChange={this.props.handleChange}/>\n      </div>\n    );\n  }\n};\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class MyApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n  render() {\n    return (\n       <div>\n        { /* Change code below this line */ }\n        <GetInput input={this.state.inputValue} handleChange={this.handleChange}/>\n        <RenderInput input={this.state.inputValue}/>\n        { /* Change code above this line */ }\n       </div>\n    );\n  }\n};\n\nclass GetInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <h3>Get Input:</h3>\n        <input\n          value={this.props.input}\n          onChange={this.props.handleChange}/>\n      </div>\n    );\n  }\n};\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"child-interact-parent","depth":3,"text":"child interact parent"}]}},"_type":"markdown","_id":"content:ui-libraries:react:child-interact-parent.md","_source":"content","_file":"ui-libraries/react/child-interact-parent.md","_extension":"md"},{"_path":"/ui-libraries/react/component","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Component","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"component"},"children":[{"type":"text","value":"Component"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"core of react"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"everything in react is component"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2 ways to create\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Javascipt Function"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ES6 classes"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"using-js-function"},"children":[{"type":"text","value":"Using JS function"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"creates stateless functional component"}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"js function that returns JSX or null"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"function name should begin with capital letter"}]}]},{"type":"element","tag":"pre","props":{"className":["language-jsx"],"code":"const DemoComponent = function(){\n    return (\n        <div className=\"customClass\"/>\n    )\n}\n","language":"jsx","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const DemoComponent = function(){\n    return (\n        <div className=\"customClass\"/>\n    )\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"using-class-syntax"},"children":[{"type":"text","value":"Using Class syntax"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"extend React.component"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"make a constructor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"make a render method"}]}]},{"type":"element","tag":"pre","props":{"className":["language-jsx"],"code":"class Kitten extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return (\n            <h1>Hi!</h1>\n        )\n    }\n}\n","language":"jsx","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Kitten extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return (\n            <h1>Hi!</h1>\n        )\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kitten extends React.Component class, so now it has many features of react.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"local state, lifecycle hooks"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stateless functional component\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"function that accepts props, returns JSX"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stateless component\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"class that extends React.component, but does not uses an internal state"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stateful component\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"class component that maintains own internal state, referred simply as react components"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"common pattern: reduce stateful components & create stateless components\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"helps contain state management to specific area of app"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"improves dev & maintenance as it makes easier to follow changes to state"}]}]}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"component","depth":2,"text":"Component","children":[{"id":"using-js-function","depth":3,"text":"Using JS function"},{"id":"using-class-syntax","depth":3,"text":"Using Class syntax"}]}]}},"_type":"markdown","_id":"content:ui-libraries:react:component.md","_source":"content","_file":"ui-libraries/react/component.md","_extension":"md"},{"_path":"/ui-libraries/react/composition","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Composition","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"how-to-compose-complex-component-using-multiple-components"},"children":[{"type":"text","value":"how to compose complex component using multiple components"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You can render JSX elements, stateless functional components, and ES6 class components within other components."}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const Fruits = () =>{\n    return (\n        <div>\n            Fruits\n        </div>\n    )\n}\nconst Vegetables = () =>{\n    return (\n        <div>\n        Vegetables\n        </div>\n    )\n}\nclass Foods extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return (\n            <div>\n                <Fruits/>\n                <Vegetables/>\n            </div>\n        )\n    }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const Fruits = () =>{\n    return (\n        <div>\n            Fruits\n        </div>\n    )\n}\nconst Vegetables = () =>{\n    return (\n        <div>\n        Vegetables\n        </div>\n    )\n}\nclass Foods extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return (\n            <div>\n                <Fruits/>\n                <Vegetables/>\n            </div>\n        )\n    }\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"how-to-compose-complex-component-using-multiple-components","depth":3,"text":"how to compose complex component using multiple components"}]}},"_type":"markdown","_id":"content:ui-libraries:react:composition.md","_source":"content","_file":"ui-libraries/react/composition.md","_extension":"md"},{"_path":"/ui-libraries/react/controlled-components","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Controlled Components","description":"","body":{"type":"root","children":[],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:ui-libraries:react:controlled-components.md","_source":"content","_file":"ui-libraries/react/controlled-components.md","_extension":"md"},{"_path":"/ui-libraries/react/hooks-flow","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Hooks Flow","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"hooks-lifecycle"},"children":[{"type":"text","value":"Hooks Lifecycle"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mounting:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"useState() -> lazy initializers"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"render: rest of the function code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"update DOM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"run layout effects"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Browser paints screen"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"run effects"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Updating:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"render: rest of the function code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"update DOM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"cleanup layout effects"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"run layout effects"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Browser paints screen"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"clean up side effects of prev render"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"run effects"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unmount:"}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"cleanup layout effects"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"clean up side effects of prev render"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"hooks-lifecycle","depth":3,"text":"Hooks Lifecycle"}]}},"_type":"markdown","_id":"content:ui-libraries:react:hooks-flow.md","_source":"content","_file":"ui-libraries/react/hooks-flow.md","_extension":"md"},{"_path":"/ui-libraries/react/if","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"If","description":"","body":{"type":"root","children":[],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:ui-libraries:react:if.md","_source":"content","_file":"ui-libraries/react/if.md","_extension":"md"},{"_path":"/ui-libraries/react/jsx","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Jsx","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"jsx"},"children":[{"type":"text","value":"jsx"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"benefit: full programmatic power of js in html"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"not valid js, hence must be converted to js. done using babel transpiler"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simply include js code within round brace"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"must return a single element"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"tool to write readable html within JS"}]}]},{"type":"element","tag":"pre","props":{"className":["language-jsx"],"code":"const JSX = (\n    <div>\n        {/* some comment here */}\n        <h1 className=\"hello\">Hello</h1>\n    </div>\n)\n//Render JSX\nReactDOM.render(JSX, document.getElementById('challenge-node'))\n","language":"jsx","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const JSX = (\n    <div>\n        {/* some comment here */}\n        <h1 className=\"hello\">Hello</h1>\n    </div>\n)\n//Render JSX\nReactDOM.render(JSX, document.getElementById('challenge-node'))\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"class is reserved keyword in JS, therefore JSX uses "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"className"}]},{"type":"text","value":" to define class in html\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"naming convention for all HTML attributes and event references in JSX become camelCase. For example, a click event in JSX is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onClick"}]},{"type":"text","value":", instead of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onclick"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"has concept of self-closing tag for all elements\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"<div/>"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"<div></div>"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"this is useful in adding react component"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"jsx","depth":3,"text":"jsx"}]}},"_type":"markdown","_id":"content:ui-libraries:react:jsx.md","_source":"content","_file":"ui-libraries/react/jsx.md","_extension":"md"},{"_path":"/ui-libraries/react/life-cycle","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Life Cycle","description":"","body":{"type":"root","children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Life Cycle\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"componentDidUpdate - going to be depreceated in 17"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"componentDidMount\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"call API"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"attach event listener"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"componentWillUnmount"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"shouldComponentUpdate(nextProps, nextState)"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:ui-libraries:react:life-cycle.md","_source":"content","_file":"ui-libraries/react/life-cycle.md","_extension":"md"},{"_path":"/ui-libraries/react/props","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Props","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"using-props"},"children":[{"type":"text","value":"using props"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const List = () = {\n    return (\n        <p>{props.tasks.join(', ')}</p>\n    )\n}\n\n<List tasks={[\"learn react\",\"learn state\"]}>\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const List = () = {\n    return (\n        <p>{props.tasks.join(', ')}</p>\n    )\n}\n\n<List tasks={[\"learn react\",\"learn state\"]}>\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"giving default value\n"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"    ShoppingCart.defaultProps = {\n        items:0\n    }\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    ShoppingCart.defaultProps = {\n        items:0\n    }\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"giving propTypes\n"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"    ShoppingCart.propTypes = {\n        items: PropTypes.func.isRequired\n    }\n    // items should be of type function\n    // items is a required property\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    ShoppingCart.propTypes = {\n        items: PropTypes.func.isRequired\n    }\n    // items should be of type function\n    // items is a required property\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"there are many types available apart from primitive types"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"function -> func, boolean -> bool"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PropTypes is imported independently from React, like this: import PropTypes from 'prop-types';"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"same way for class & functional component"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in Class component, it is accessed using this.props.data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"allows unidirectional data flow"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"using-props","depth":3,"text":"using props"}]}},"_type":"markdown","_id":"content:ui-libraries:react:props.md","_source":"content","_file":"ui-libraries/react/props.md","_extension":"md"},{"_path":"/ui-libraries/react/redux","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Redux","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"redux"},"children":[{"type":"text","value":"Redux"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Predictable state container for JS apps"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"can be used with any UI library"}]}]},{"type":"element","tag":"h3","props":{"id":"async"},"children":[{"type":"text","value":"Async"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Redux Thunk middleware"}]},{"type":"element","tag":"h3","props":{"id":"basic"},"children":[{"type":"text","value":"Basic"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"create redux store"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const reducer = (state = 5) => state\nconst store = Redux.createStore(reducer)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const reducer = (state = 5) => state\nconst store = Redux.createStore(reducer)\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"get current state from store"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"store.getState()\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"store.getState()\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Define Action, change state -> done by dispatching action"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"action: simple js obj, containing info about event that has just occured"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sometimes carries data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"must have type property"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const action = {\n  type: 'LOGIN',\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const action = {\n  type: 'LOGIN',\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Define action creator"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple js function that returns an action"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const actionCreator = () => {\n  return action\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const actionCreator = () => {\n  return action\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dispatch action to store"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"store.dispatch(action)\nstore.dispatch(actionCreator)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"store.dispatch(action)\nstore.dispatch(actionCreator)\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reducer"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"how to respond to an action"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(state, action) => state"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"no side effect, no api call"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const authReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        authenticated: true,\n      }\n    default:\n      return state\n  }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const authReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        authenticated: true,\n      }\n    default:\n      return state\n  }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"subscribe - called when action are dispatched against store"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"store.subscribe(function () {\n  count += 1\n})\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"store.subscribe(function () {\n  count += 1\n})\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"composing reducers"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"instead of having multiple state, have multiple reducers"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"combineReducers\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple object"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"key are name for associated piece of state"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"write reducer for each piece of application state"}]}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const rootReducer = Redux.combineReducers({\n  auth: authReducer,\n  count: counterReducer,\n})\nconst store = Redux.createStore(rootReducer)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const rootReducer = Redux.combineReducers({\n  auth: authReducer,\n  count: counterReducer,\n})\nconst store = Redux.createStore(rootReducer)\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"handle async operation"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Redux Thunk middleware"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const handleAsync = () => {\n  return function (dispatch) {\n    // Dispatch request action here\n    dispatch(requestingData())\n    setTimeout(function () {\n      let data = {\n        users: ['Jeff', 'William', 'Alice'],\n      }\n      // Dispatch received data action here\n      dispatch(receivedData(data))\n    }, 2500)\n  }\n}\nconst store = Redux.createStore(\n  asyncDataReducer,\n  Redux.applyMiddleware(ReduxThunk.default)\n)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const handleAsync = () => {\n  return function (dispatch) {\n    // Dispatch request action here\n    dispatch(requestingData())\n    setTimeout(function () {\n      let data = {\n        users: ['Jeff', 'William', 'Alice'],\n      }\n      // Dispatch received data action here\n      dispatch(receivedData(data))\n    }, 2500)\n  }\n}\nconst store = Redux.createStore(\n  asyncDataReducer,\n  Redux.applyMiddleware(ReduxThunk.default)\n)\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"declare async action"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"takes dispatch as arg"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"call after operation finishes"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"redux","depth":2,"text":"Redux","children":[{"id":"async","depth":3,"text":"Async"},{"id":"basic","depth":3,"text":"Basic"}]}]}},"_type":"markdown","_id":"content:ui-libraries:react:redux.md","_source":"content","_file":"ui-libraries/react/redux.md","_extension":"md"},{"_path":"/ui-libraries/react/ref","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"Ref","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"ref-createref-useref"},"children":[{"type":"text","value":"ref, createRef, useRef"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useRef()"}]},{"type":"text","value":" is basically "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useState(React.createRef())[0]"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"ref-createref-useref","depth":3,"text":"ref, createRef, useRef"}]}},"_type":"markdown","_id":"content:ui-libraries:react:ref.md","_source":"content","_file":"ui-libraries/react/ref.md","_extension":"md"},{"_path":"/ui-libraries/react/state","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"State","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"usestate"},"children":[{"type":"text","value":"useState"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const [value, setValue] = useState(initialValue)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const [value, setValue] = useState(initialValue)\n"}]}]},{"type":"element","tag":"h4","props":{"id":"things-to-keep-in-mind"},"children":[{"type":"text","value":"Things to keep in mind:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if initialValue is a computation, make it function, ie\ninstead of this"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const [] = useState(localStorage.getItem('name') || '')\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const [] = useState(localStorage.getItem('name') || '')\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"do this"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const [] = useState(() => localStorage.getItem('name') || '')\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const [] = useState(() => localStorage.getItem('name') || '')\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"useState ignores the initialValue after first render"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"also called Lazy state initialization"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"use-old-value"},"children":[{"type":"text","value":"Use old value"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"useEffect(() => {\n  setCount((oldValue) => (oldValue += 1))\n})\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"useEffect(() => {\n  setCount((oldValue) => (oldValue += 1))\n})\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"usestate","depth":3,"text":"useState"}]}},"_type":"markdown","_id":"content:ui-libraries:react:state.md","_source":"content","_file":"ui-libraries/react/state.md","_extension":"md"},{"_path":"/ui-libraries/react/usecallback","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"UseCallback","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"usecallback"},"children":[{"type":"text","value":"useCallback"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"used when memoization is involved"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"memoization\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"caching is a form of memoization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"referential equality"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"usecallback","depth":3,"text":"useCallback"}]}},"_type":"markdown","_id":"content:ui-libraries:react:useCallback.md","_source":"content","_file":"ui-libraries/react/useCallback.md","_extension":"md"},{"_path":"/ui-libraries/react/useeffect","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"UseEffect","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"useeffect"},"children":[{"type":"text","value":"useEffect"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"synchronize state of the world with state of my app"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"useEffect(callback, dependencyArray)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"useEffect(callback, dependencyArray)\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"custom hook: a function that uses hooks"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to give hint to eslint system, custom hook should start with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"use"}]},{"type":"text","value":", just a convention to tell ecosystem that it is custom hook"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"function useLocalState(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return localStorage.getItem(key) || defaultValue\n  })\n  useEffect(() => {\n    localStorage.setItem(key, state)\n  }, [key, state])\n  return [state, setState]\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function useLocalState(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return localStorage.getItem(key) || defaultValue\n  })\n  useEffect(() => {\n    localStorage.setItem(key, state)\n  }, [key, state])\n  return [state, setState]\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"as a good practice, always serialize/deserialize data before reading/writing to localStorage"},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const [state, setState] = useState(() => {\n  const value = localStorage.getItem(key)\n  if (value) {\n    return JSON.parse(value)\n  }\n  return defaultValue\n})\n\nuseEffect(() => {\n  localStorage.setItem(key, JSON.stringify(state))\n}, [key, state])\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const [state, setState] = useState(() => {\n  const value = localStorage.getItem(key)\n  if (value) {\n    return JSON.parse(value)\n  }\n  return defaultValue\n})\n\nuseEffect(() => {\n  localStorage.setItem(key, JSON.stringify(state))\n}, [key, state])\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"useeffect","depth":3,"text":"useEffect"}]}},"_type":"markdown","_id":"content:ui-libraries:react:useEffect.md","_source":"content","_file":"ui-libraries/react/useEffect.md","_extension":"md"},{"_path":"/ui-libraries/react/usereducer","_dir":"react","_draft":false,"_partial":false,"_locale":"","title":"UseReducer","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"usereducer"},"children":[{"type":"text","value":"useReducer"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sometimes you want to separate the state logic from the components that make the state changes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if you have multiple elements of state that typically change together, then having an object that contains those elements of state can be quite helpful."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"as useState"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const countReducer = (state, newState) => newState\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [count, setCount] = React.useReducer(countReducer, initialCount)\n  const increment = () => setCount(count + step)\n  return <button onClick={increment}>{count}</button>\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const countReducer = (state, newState) => newState\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [count, setCount] = React.useReducer(countReducer, initialCount)\n  const increment = () => setCount(count + step)\n  return <button onClick={increment}>{count}</button>\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"compute inside reducer function"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const countReducer = (count, change) => count + change\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [count, changeCount] = React.useReducer(countReducer, initialCount)\n  const increment = () => changeCount(step)\n  return <button onClick={increment}>{count}</button>\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const countReducer = (count, change) => count + change\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [count, changeCount] = React.useReducer(countReducer, initialCount)\n  const increment = () => changeCount(step)\n  return <button onClick={increment}>{count}</button>\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"as callback"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const countReducer = (state, action) => ({\n  ...state,\n  ...(typeof action === 'function' ? action(state) : action),\n})\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [state, setState] = React.useReducer(countReducer, {\n    count: initialCount,\n  })\n  const { count } = state\n  const increment = () =>\n    setState((currentState) => ({ count: currentState.count + step }))\n  return <button onClick={increment}>{count}</button>\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const countReducer = (state, action) => ({\n  ...state,\n  ...(typeof action === 'function' ? action(state) : action),\n})\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [state, setState] = React.useReducer(countReducer, {\n    count: initialCount,\n  })\n  const { count } = state\n  const increment = () =>\n    setState((currentState) => ({ count: currentState.count + step }))\n  return <button onClick={increment}>{count}</button>\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"as dispatch object"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"function countReducer(state, action) {\n  const { type, step } = action\n  switch (type) {\n    case 'increment': {\n      return {\n        ...state,\n        count: state.count + step,\n      }\n    }\n    default: {\n      throw new Error(`Unsupported action type: ${type}`)\n    }\n  }\n}\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [state, dispatch] = React.useReducer(countReducer, {\n    count: initialCount,\n  })\n  const { count } = state\n  const increment = () => dispatch({ type: 'increment', step })\n  return <button onClick={increment}>{count}</button>\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function countReducer(state, action) {\n  const { type, step } = action\n  switch (type) {\n    case 'increment': {\n      return {\n        ...state,\n        count: state.count + step,\n      }\n    }\n    default: {\n      throw new Error(`Unsupported action type: ${type}`)\n    }\n  }\n}\n\nfunction Counter({ initialCount = 0, step = 1 }) {\n  const [state, dispatch] = React.useReducer(countReducer, {\n    count: initialCount,\n  })\n  const { count } = state\n  const increment = () => dispatch({ type: 'increment', step })\n  return <button onClick={increment}>{count}</button>\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"usereducer","depth":3,"text":"useReducer"}]}},"_type":"markdown","_id":"content:ui-libraries:react:useReducer.md","_source":"content","_file":"ui-libraries/react/useReducer.md","_extension":"md"}]